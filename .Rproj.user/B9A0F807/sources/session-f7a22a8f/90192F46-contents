#' @title Sort CNV annovation result by pathogenic and size
#' @param data A data frame of CNV annovation result.
#' @export
sort_result <-function(data) {
    # sort result
    data[,"MaxRate"] <- as.numeric(as.vector(data[,"MaxRate"]))
    data[,"predict"] <- as.integer(as.vector(data[,"predict"]))
    data[,"Probes"] <- as.integer(as.vector(data[,"Probes"]))
    data[,"SVSize"] <- as.integer(as.vector(data[,"SVSize"]))
    data[,"pli_counts"] <- as.integer(as.vector(data[,"pli_counts"]))

    idx1 <- which(data[,"Chr"] %in% as.character(seq(1,22,1)) & data[,"MaxRate"] != -1 & data[,"predict"] == 1)
    idx2 <- which(data[,"Chr"] %in% as.character(seq(1,22,1)) & data[,"MaxRate"] == -1 & data[,"predict"] == 1 & data[,"pli_counts"] >= 5 & grepl("population", data[, "Flag"])==FALSE)
    idx3 <- setdiff(which(data[,"predict"] == 1 & data[,"pli_counts"] > 0), c(idx1, idx2))
    idx4 <- setdiff(which(data[,"predict"] == 1), c(idx1, idx2, idx3))
    idx5 <- setdiff(1:nrow(data), c(idx1, idx2, idx3, idx4))
    re_df_lst <- list()
    if (length(idx1) > 0) {
        idx1_df <- data[idx1,, drop = FALSE]
        re_df_lst[["1"]] <- idx1_df[order(idx1_df[,"MaxRate"], idx1_df[,"Probes"], decreasing = TRUE),]
    }

    if (length(idx2) > 0) {
        idx2_df <- data[idx2,, drop = FALSE]
        re_df_lst[["2"]] <- idx2_df[order(idx2_df[,"Probes"], idx2_df[,"pli_counts"],  decreasing = TRUE),]
    }

    if (length(idx3) > 0) {
        idx3_df <- data[idx3,, drop = FALSE]
        re_df_lst[["3"]] <- idx3_df[order(idx3_df[,"Probes"], idx3_df[,"pli_counts"],  decreasing = TRUE),]
    }

    if (length(idx4) > 0) {
        idx4_df <- data[idx4,, drop = FALSE]
        re_df_lst[["4"]] <- idx4_df[order(idx4_df[,"Probes"], idx4_df[,"SVSize"],  decreasing = TRUE),]
    }

    if (length(idx5) > 0) {
        idx5_df <- data[idx5,, drop = FALSE]
        re_df_lst[["5"]] <- idx5_df[order(idx5_df[,"Probes"], idx5_df[,"SVSize"],  decreasing = TRUE),]
    }
    out_data <- do.call("rbind", re_df_lst)
    rownames(out_data) <- NULL
    return(out_data)
}
